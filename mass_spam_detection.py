# generated by chatgpt with slight modifications
# prompt:
# write python function that accepts message: str, user_id: int, post_id: int, and returns suspicious user_id, based on following:
# - everything is considered in 5s time span
# - there are 2 exact same messages from this user under two different posts
# - after 5s clean up all entries
# - this function will be called repeatedly on each message
# - each user_id must be returned exactly once in the time span
# - use global state
import time
import os

TIME_SPAN_SEC = os.getenv("MASS_SPAM_TIME_SPAN") or 5.0

# Global state
message_log = []  # List of tuples: (timestamp, user_id, post_id, message)
flagged_users = set()  # Set of user_ids already flagged within the 5s window


def detect_mass_spam(message: str, user_id: int, post_id: int) -> bool:
    """
    detects when user sends several exacts same messages under different posts
    """
    global message_log, flagged_users
    now = time.time()

    # Clean old entries
    message_log = [(t, u, p, m) for (t, u, p, m) in message_log if now - t <= TIME_SPAN_SEC]
    if not message_log:
        flagged_users.clear()  # Reset flagged users only when window slides clean

    # Check for suspicious behavior
    posts_with_same_msg = {
        p for (_, u, p, m) in message_log if u == user_id and m == message
    }

    if len(posts_with_same_msg) >= 1 and post_id not in posts_with_same_msg:
        # We've seen this message by this user on a different post in last 5s
        if user_id not in flagged_users:
            flagged_users.add(user_id)

            # Add this message after returning — so we don't suppress this user too early
            message_log.append((now, user_id, post_id, message))
            return True

    # Log the current message
    message_log.append((now, user_id, post_id, message))
    return False
